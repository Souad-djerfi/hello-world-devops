- name: Create EC2 instances
  hosts: localhost
  gather_facts: false
  vars:
    region: us-east-1
    instance_type: t2.micro
    image:
      id: ami-0dba2cb6798deb6d8
    key_name: mykey
    security_group: mysecuritygroup
    count: 1
  tasks:
    - name: Create EC2 instances
      amazon.aws.ec2_instance:
        key_name: "{{ key_name }}"
        security_group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        region: "{{ region }}"
        count: "{{ count }}"
        wait: true
        vpc_subnet_id: subnet-1234abcd
        network:
         assign_public_ip: true
      register: ec2
    - name: Wait for instances to be in running state
      ansible.builtin.wait_for:
        state: present
        host: "{{ item.public_ip_address }}"
        port: 22
      with_items: "{{ ec2.instances }}"
    - name: Print instance information
      ansible.builtin.debug:
        var: item
      with_items: "{{ ec2.instances }}"
- name: create container
  become: yes
  hosts: localhost
  tasks:
  - name: supprimer conteneur tomcat s'il exist
    command: docker rm --force tomcat
    ignore_errors: yes
  - name: build image
    command: docker build -t tomcat /opt/ansible/

  - name: tag image
    command: docker image tag tomcat souaddjerfi/tomcat:latest
  - name: push image
    command: docker push souaddjerfi/tomcat:latest

- name: pull and run image sur dockerhost
  become: yes
  hosts: all
  tasks: 
  - name: pull image dans docker host
    command: docker pull souaddjerfi/tomcat:latest
  - name: supprimer conteneur sil existe
    command: docker rm -f tomcat
    ignore_errors: yes
  - name:  run dans dockerhost 
    command: docker run -d --name tomcat -p 8082:8080 souaddjerfi/tomcat:latest